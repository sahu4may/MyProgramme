
Q.1: How to remove duplicate characters from a string?
Ans.: The user will input a string and the method should remove multiple occurrences of 

characters in the string

input: csharpcorner, output: csharpone
internal static void removeduplicate(string str)  
 {  
     string result = string.Empty;  
  
     for (int i = 0; i < str.Length; i++)  
     {  
         if (!result.Contains(str[i]))  
         {  
             result += str[i];  
         }  
     }  
     Console.WriteLine(result);  
 }


=========================Sorting the number in asending order =======
using System;  
public class Exercise11  
{  
    public static void Main() 
{
	int[] arr1 = new int[10];
    int n, i, j, tmp;
	
	
       Console.Write("\n\nSort elements of array in ascending order :\n");
       Console.Write("----------------------------------------------\n");	

    Console.Write("Input the size of array : ");
    n = Convert.ToInt32(Console.ReadLine()); 

       Console.Write("Input {0} elements in the array :\n",n);
       for(i=0;i<n;i++)
            {
	      Console.Write("element - {0} : ",i);
		 arr1[i] = Convert.ToInt32(Console.ReadLine());  
	    }

    for(i=0; i<n; i++)
    {
        for(j=i+1; j<n; j++)
        {
            if(arr1[j] < arr1[i])
            {
                tmp = arr1[i];
                arr1[i] = arr1[j];
                arr1[j] = tmp;
            }
        }
    }
    Console.Write("\nElements of array in sorted ascending order:\n");
    for(i=0; i<n; i++)
    {
        Console.Write("{0}  ", arr1[i]);
    }
		        Console.Write("\n\n");	
  }

}
https://www.w3resource.com/csharp-exercises/array/csharp-array-exercise-11.php`

Reverse or recursive of string 
https://www.csharpstar.com/c-program-to-reverse-a-string/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CodingAlgorithms
{
    //Reverse a string
    public static class ReverseString
    {
        public static string Reverse(string x)
        {
            string result = "";
            for (int i = x.Length - 1; i >= 0; i--)
                result += x[i];
            return result;
        }
    }
}
