
Q.1: How to remove duplicate characters from a string? or Problem 2: Get all unique characters in a string.
Ans.: The user will input a string and the method should remove multiple occurrences of 

characters in the string

input: csharpcorner, output: csharpone
input : Google,ouptu: Gole
internal static void removeduplicate(string str)  
 {  
     string result = string.Empty;  
  
     for (int i = 0; i < str.Length; i++)  
     {  
         if (!result.Contains(str[i]))  
         {  
             result += str[i];  
         }  
     }  
     Console.WriteLine(result);  
 }

Here, you can see the output as "gole". Which means after removing duplicate characters from the word "google" we get the "gole" which are unique chars.

Unique char in string 'google' is = gole

Problem 3: Get max occured character in a String.
=========================Sorting the number in asending order =======
using System;  
public class Exercise11  
{  
    public static void Main() 
{
	int[] arr1 = new int[10];
    int n, i, j, tmp;
	
	
       Console.Write("\n\nSort elements of array in ascending order :\n");
       Console.Write("----------------------------------------------\n");	

    Console.Write("Input the size of array : ");
    n = Convert.ToInt32(Console.ReadLine()); 

       Console.Write("Input {0} elements in the array :\n",n);
       for(i=0;i<n;i++)
            {
	      Console.Write("element - {0} : ",i);
		 arr1[i] = Convert.ToInt32(Console.ReadLine());  
	    }

    for(i=0; i<n; i++)
    {
        for(j=i+1; j<n; j++)
        {
            if(arr1[j] < arr1[i])
            {
                tmp = arr1[i];
                arr1[i] = arr1[j];
                arr1[j] = tmp;
            }
        }
    }
    Console.Write("\nElements of array in sorted ascending order:\n");
    for(i=0; i<n; i++)
    {
        Console.Write("{0}  ", arr1[i]);
    }
		        Console.Write("\n\n");	
  }

}
https://www.w3resource.com/csharp-exercises/array/csharp-array-exercise-11.php`

Reverse or recursive of string 
https://www.csharpstar.com/c-program-to-reverse-a-string/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CodingAlgorithms
{
    //Reverse a string
    public static class ReverseString
    {
        public static string Reverse(string x)
        {
            string result = "";
            for (int i = x.Length - 1; i >= 0; i--)
                result += x[i];
            return result;
        }
    }
}
====================
Problem 5: Get the word count in a sentence (string).
namespace DataStructureDemo.Example  
{  
    public class StringDataStructure  
    {  
        // Get the count of the word in a sentence  
        public int GetWordCount(string _title)  
        {  
            if (string.IsNullOrEmpty(_title))  
                return 0;  
  
            _title = _title.Trim();  
  
            var length = _title.Split(' ').Length;  
  
            return length;  
        }  
    }  
}  

StringDataStructure _stringDT = new StringDataStructure();            
//Get the word cound for string  
var value5 = _stringDT.GetWordCount("My name is mukesh");  
WriteLine("Word count for the string 'My name   is mukesh' is = " + value5);

The output will be as follows.

Word count for the string 'My name is mukesh' is = 4
======================
Problem 9: Get the first char of each word in capital letter.
namespace DataStructureDemo.Example  
{  
    public class StringDataStructure  
    {  
        // Get the first char of the each word  
        public void GetFirstCharForEachWord(string sentence)  
        {  
            if (!string.IsNullOrEmpty(sentence))  
            {  
                string[] arr = sentence.Split(' ');  
  
                foreach (string item in arr)  
                {  
                    Write(item.Substring(0, 1).ToUpper() + " ");  
                }  
  
                ReadKey();  
            }  
        }  
    }  
}  


StringDataStructure _stringDT = new StringDataStructure();  
stringDT.GetFirstCharForEachWord("I love my india.");  

Output-
I L M I
====================
https://www.techiedelight.com/count-occurrences-of-character-within-string-csharp/
foreach loop

using System;
 
public class Example
{
    public static void Main()
    {
        string str = "Techie Delight";
        char ch = 'e';
 
        int freq = 0;
        foreach (char c in str)
        {
            if (c == ch)
            {
                freq++;
            }
        }
 
        Console.WriteLine(freq);
    }
}
 
/*
    Output: 3
*/
=================
https://www.geeksforgeeks.org/number-of-occurrences-of-2-as-a-digit-in-numbers-from-0-to-n/
// C# code for above implementation
using System;
class GFG
{
  static int numberOf2sinRange(int n)
  {
    string s = "";
    for(int i = 0; i < n + 1; i++)
      s += i + "";  
    int count = 0;
    for(int i = 0; i < s.Length; i++)
    {
      if(s[i] == '2')
      {
        count++;
      }
    }
    return count;
  }
 
  // Driver code
  public static void Main(string[] args)
  {
    int n = 30;
    Console.Write(numberOf2sinRange(n));
  }
}
Output: 
13

===============
find unique item from Array using c# method
https://www.c-sharpcorner.com/blogs/unique-array-items-in-c-sharp
static void Main(string[] args)  
        {  
            int[] items = { 2, 3, 5, 3, 7, 5 };  
            int n = items.Length;  
  
            Console.WriteLine("Unique array elements: ");  
  
            for(int i=0; i<n;i++)  
            {  
                bool isDuplicate = false;  
                for(int j=0;j<i;j++)  
                {  
                    if(items[i] == items[j])  
                    {  
                        isDuplicate = true;  
                        break;  
                    }  
                }  
  
                if(!isDuplicate)  
                {  
                    Console.WriteLine(items[i]);  
                      
                }  
            }  
  
            Console.ReadLine();  
        }  
	output- 2,3,5,7
==================
How to find duplicate element from array
https://www.tutorialspoint.com/How-to-check-if-array-contains-a-duplicate-number-using-Chash

using System;
using System.Collections.Generic;
namespace Demo {
   public class Program {
      public static void Main(string[] args) {
     
         int[] arr = {
            87,
            55,
            23,
            87,
            45,
            23,
            98
         };
         var dict = new Dictionary < int, int > ();
         foreach(var count in arr) {
            if (dict.ContainsKey(count))
            dict[count]++;
            else
            dict[count] = 1;
         }
         foreach(var val in dict)
         Console.WriteLine("{0} occurred {1} times", val.Key, val.Value);
      }
   }
}
===
combine two array and find duplicate value 
https://www.tutorialspoint.com/combine-two-arrays-in-chash#:~:text=var%20myList%20%3D%20new%20List%3Cint,AddRange(arr2)%3B

var myList = new List<int>();
myList.AddRange(arr1);
myList.AddRange(arr2);
